# K1
# CreateDate: 2023/03/21

#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)

[gcode_macro PRINT_START]
gcode:
#    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
#    M140 S{bed_temp}                                    #start heating bed dont wait
#    m104 S{extruder_temp}                               #start heating nozzle dont wait
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
 BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    M106 S255                                           # Turn on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
  #  TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
#    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

   # Heat hotend to 150c. This helps with getting a correct Z-home.
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position

#[gcode_macro PRINT_START]
#variable_bed_temp: 100
#variable_extruder_temp: 240
#gcode:
#    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
#    M140 S{bed_temp}                                    #start heating bed dont wait
#    m104 S{extruder_temp}                               #start heating nozzle dont wait
#    SET_PIN PIN=LED VALUE=1
#    G28                                                 #home all axis
#    G4 P1000                                            #wait required to prevent camera restarting too quickly causing mcu crash
#    RUN_SHELL_COMMAND CMD=cam-stop                      #stop camera services to prevent mcu overload
#    G4 P1000                                            #wait required to allow the camera services to close
#    BED_MESH_CLEAR                                      #clear current mesh
#    # G4 P500                                           #wait required to prevent MCU overload / inconsistant meshing
#    SET_VELOCITY_LIMIT ACCEL=16000 ACCEL_TO_DECEL=10000 #drop accels to prevent hyper agressive meshing
#    BED_MESH_CALIBRATE
#    CARTOGRAPHER_TOUCH                                  #start bedmesh calibrate
#    G4 P500                                             #wait required to prevent MCU overload / inconsistant mesh calculation
#    RUN_SHELL_COMMAND CMD=cam-start                     #re-start creality camera service
#    SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=10000 #slow down to prevent hyper agressive parking
#    SMART_PARK                                          #park the printhead near the print area
#    M190 S{bed_temp}                                    #wait for bed temperature before next step
#    M109 S{extruder_temp}                               #wait for nozzle temperature before next step
#    SET_VELOCITY_LIMIT ACCEL=18000 ACCEL_TO_DECEL=10000 #speed accels back up for purge travel
#    LINE_PURGE                                          #create purge line near the print area of the part

[gcode_macro END_PRINT]
gcode:
  # Qmode_exit
  G91                                                                                 #set to reletive positioning
  G1 Z5                                                                               #move z down 5mm to avoid contacting nozzle
  G90                                                                                 #set to absolute positioning
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max *0.99 %}  # Calculate 99% position of X 
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max /2 %}     # calculate 50% of total Y
  G1 X{POSITION_X} Y{POSITION_Y} F6000                                                # move toolhead to the front of the K1 aux fan like stock
  M220 S100                                                                           # set feedrate to 100
  M204 S500                                                                           # set starting acceleration to 500
  TURN_OFF_HEATERS                                                                    # disable heaters
  M107 P1                                                                             # turn toolehad fan off
  M107 P2                                                                             # turn sidefan off
  M84                                                                                 # power off motors
  SET_PIN PIN=LED VALUE=0.45


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(200) %}      #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


[gcode_macro INPUTSHAPER]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  G90
  G28
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
  G1 X{POSITION_X} Y{POSITION_Y} F6000
  G1 Z10 F600
  SHAPER_CALIBRATE
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro M141]
description: Set Chamber Temperature with slicers
gcode:
  {% set s = params.S|float %}
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={s}
  { action_respond_info("Chamber target temperature: %s°C" % (s)) }

[gcode_macro M191]
description: Wait for Chamber Temperature to heat up
gcode:
  {% set s = params.S|float %}
  {% set chamber_temp = printer["temperature_sensor chamber_temp"].temperature|float %}
  {% if s > 0 %}
    M141 S{s}
  {% endif %}
  {% if s > chamber_temp and s <= 90 %}
    M140 S100
    { action_respond_info("Waiting for the bed to heat up the chamber...") }
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber_fan" MINIMUM={s-1}
    { action_respond_info("Chamber target temperature reached: %s°C" % (s)) }
    M140 S{s}
  {% endif %}

#[gcode_macro PROBE_CALIBRATE]
#gcode: CARTOGRAPHER_CALIBRATE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
   {% set TARGET_TEMP = printer.heater_bed.target %}
   M140 S0
   _BED_MESH_CALIBRATE {rawparams}
   M140 S{TARGET_TEMP}#

[gcode_macro Warmup]
variable_maxx: 10000 ; From X Shaper suggestion
variable_maxy: 10000 ; From Y Shaper suggestion
variable_maxd: 14142.14 ; = SQRT(2*maxy)

[gcode_macro Warmup]
variable_maxx: 10000 ; From X Shaper suggestion
variable_maxy: 10000 ; From Y Shaper suggestion
variable_maxd: 14142.14 ; = SQRT(2*maxy)

gcode:
 {% if 'LOOPS' in params|upper %}
 {% set loop_cnt = params.LOOPS|int %}
 {% endif %}
 {% if 'MAXX' in params|upper %}
 {% set maxx = params.MAXX|int %}
 {% endif %}
 {% if 'MAXY' in params|upper %}
 {% set maxy = params.MAXY|int %}
 {% endif %}
 {% set max_x = (printer.toolhead.axis_maximum.x|int-5) %}
 {% set max_y = (printer.toolhead.axis_maximum.y|int-5) %}
 {% set loop_step_y = max_y//(loop_cnt-1) %}
 {% set loop_step_x = max_x//(loop_cnt-1) %}
 M117 {max_y}
 G28
 ; Exercise X-Axis at Max acceleration per input shaping = Max_X_Accel
 SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
 {% for number in range(10,max_y+11,loop_step_y) %}
   {% if number >= max_y %}
   {% set number = max_y %}
   {% endif %}
   G1 F{maxy} X10 Y{number}
   G1 F{maxx} X{max_x} Y{number}
 {% endfor %}
 ; Exercise Y-Axis at Max acceleration per input shaping = Max_Y_Accel

 SET_VELOCITY_LIMIT ACCEL={maxy} ACCEL_TO_DECEL={maxy/2}
 {% for number in range(10,max_x+11,loop_step_y) %}
   {% if number >= max_x %}
   {% set number = max_x %}
   {% endif %}
   G1 F{maxy} X{number} Y{max_y}
   G1 F{maxy} X{number} Y10
 {% endfor %}

 ; Exercise Diagonal Movement @ Max Diagonal Acceleration = SQRT(2*Max_Y_Accel^2)

 SET_VELOCITY_LIMIT ACCEL={maxd} ACCEL_TO_DECEL={maxd/2}
 {% for times in range(loop_cnt) %}
   G1 F{maxx} X10 Y10
   G1 F{maxd} X{max_x} Y{max_y}
   G1 F{maxx} X10 Y{max_y}
   G1 F{maxd} X{max_x} Y10
   G1 F{maxy} X{max_x} Y{max_y}
   G1 F{maxd} X10 Y10
   G1 F{maxy} X10 Y{max_y}
   G1 F{maxd} X{max_x} Y10
 {% endfor %}

  ; Exercise in Square Motion

 SET_VELOCITY_LIMIT ACCEL={maxx} ACCEL_TO_DECEL={maxx/2}
 {% for times in range(loop_cnt) %}
   G1 F{maxy} X10 Y10
   G1 F{maxy} X10 Y{max_y}
   G1 F{maxx} X{max_x} Y{max_y}
   G1 F{maxy} X{max_x} Y10
   G1 F{maxx} X10 Y10
   G1 F{maxx} X{max_x} Y10
   G1 F{maxy} X{max_x} Y{max_y}
   G1 F{maxx} X10 Y{max_y}
 {% endfor %}




[gcode_macro SET_E_MIN_CURRENT]
gcode:
  {% set e_current = printer['gcode_macro PRINTER_PARAM'].e_min_current %}
  M400
  SET_TMC_CURRENT STEPPER=extruder CURRENT={e_current} HOLDCURRENT={e_current}
  G4 P2000

[gcode_macro RESTORE_E_CURRENT]
gcode:
  {% set e_current = printer.configfile.settings['tmc2209 extruder'].run_current %}
  M400
  SET_TMC_CURRENT STEPPER=extruder CURRENT={e_current} HOLDCURRENT={e_current}
  G4 P2000



[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

    
[gcode_macro M600]
gcode:
    #LCDRGB R=1 G=0 B=0  ; Turn LCD Red
    PAUSE                ; Pause

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set variable_extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set variable_load_distance = params.LOAD_DISTANCE|default(50)|float %}
    {% set variable_purge_distance = params.PURGE_DISTANCE|default(30)|float %}
    {% set speed = params.SPEED|default(300)|float %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|default(5)|float * 60 %}
    # SAVE_GCODE_STATE NAME=load_state
    M104 S{variable_extruder_temp} ; Set hot end temperature
    M109 S{variable_extruder_temp} ; Wait for the hot end to reach the target temperature
    {% if 'x' not in printer.toolhead.homed_axes %}
        G28 ; Home all axes
        G28 X ; Home X-axis
    {% endif %}
    G91 ; Relative positioning
    G92 E0 ; Reset extruder position
    SAVE_GCODE_STATE NAME=load_state
    G1 E{variable_load_distance} F{max_velocity} ; Fast-load filament
    G1 E{variable_purge_distance} F{speed} ; Purge filament
    RESTORE_GCODE_STATE NAME=load_state
    G4 S30 ; Wait for 30 seconds
    M104 S0 ; Turn off hot end heater

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set variable_extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set speed = params.SPEED|default(300)|float %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|default(5)|float * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    M104 S{variable_extruder_temp} ; Set hot end temperature
    M109 S{variable_extruder_temp} ; Wait for the hot end to reach the target temperature
    {% if 'x' not in printer.toolhead.homed_axes %}
        G28 ; Home all axes
        G28 X ; Home X-axis
    {% endif %}
    G91 ; Relative positioning
    G92 E0 ; Reset extruder position
    G1 E{variable_purge_distance} F{speed} ; Purge filament
    G1 E-{variable_unload_distance} F{max_velocity} ; Fast-unload filament
    RESTORE_GCODE_STATE NAME=unload_state
    G4 S30 ; Wait for 30 seconds
    M104 S0 ; Turn off hot end heater

    
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    {% set TARGET_TEMP = printer.heater_bed.target %}
    M140 S0
    _BED_MESH_CALIBRATE {rawparams}
    M140 S{TARGET_TEMP}
    
  
######################################
#                                    #
#    PPPP     IIIII       DDDD       # 
#    P  PP      I         D   D      #
#    PPPP       I         D    D     #
#    P          I         D   D      #
#    P        IIIII       DDDD       #
#                                    #
######################################

[gcode_macro APID_HOTEND220]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=240
  SAVE_CONFIG


[gcode_macro APID_HOTEND230]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=260
  SAVE_CONFIG


[gcode_macro APID_HOTEND255]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=270
  SAVE_CONFIG

  
[gcode_macro APID_HOTEND300]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=280
  SAVE_CONFIG


[gcode_macro APID_HOTEND350]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=290
  SAVE_CONFIG


[gcode_macro ABEDPID100]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG


[gcode_macro ABEDPID65]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=65
  SAVE_CONFIG

[gcode_macro z_tilt]
gcode:
  G28
  Z_TILT_ADJUST

[gcode_macro DATA_SAMPLE]
gcode:
  {% set bed_temp = params.BED_TEMP|default(90)|int %}
  {% set nozzle_temp = params.NOZZLE_TEMP|default(250)|int %}
  {% set min_temp = params.MIN_TEMP|default(40)|int %}
  {% set max_temp = params.MAX_TEMP|default(70)|int %}
  G90
  M106 S255
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  RESPOND TYPE=command MSG='Starting Phase 1 of 4'
  M117 Starting Phase 1 of 4
  M106 S0
  G28
  G0 Z1
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={min_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 Starting Phase 2 of 4
  RESPOND TYPE=command MSG='Starting Phase 2 of 4'
  M106 S0
  G28 Z0
  G0 Z2
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 "Starting Phase 3 of 4"
  RESPOND TYPE=command MSG='Starting Phase 3 of 4'
  M106 S0
  G28 Z0
  G0 Z3
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  RESPOND TYPE=command MSG='Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/'
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/"
  RESPOND TYPE=command MSG='Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta'
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"